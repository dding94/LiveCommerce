plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'checkstyle'
}

group = 'com.flab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


checkstyle {
	configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
	configProperties = ["suppressionFile": "${project.rootDir}/config/checkstyle/checkstyle/checkstyle-suppressions.xml"]
	ignoreFailures = false //경고가 있는 경우 빌드를 계속할 수 있는지 여부
	toolVersion = "8.40"
	maxErrors = 0
	maxWarnings = 0
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation project(path: ':legacy', configuration: 'default')
	implementation project(path: ':order-api:order-infrastructure', configuration: 'default')

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.security:spring-security-crypto'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// mysql
	implementation 'mysql:mysql-connector-java'
	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// flyway
	implementation 'org.flywaydb:flyway-mysql'
	// redis
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	// annotation
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.named('test') {
	useJUnitPlatform()
}
